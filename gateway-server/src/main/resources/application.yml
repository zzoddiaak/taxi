server:
  port: 8080

spring:
  application:
    name: gateway-server
  main:
    allow-bean-definition-overriding: true
  config:
    import: "optional:configserver:"
  cloud:
    config:
      enabled: false
    compatibility-verifier:
      enabled: false
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Основные маршруты сервисов
        - id: driver-service
          uri: lb://driver-service
          predicates:
            - Path=/api/v1/drivers/**
          filters:
            - name: CircuitBreaker
              args:
                name: driverServiceCB
                fallbackUri: forward:/fallback/driver

        - id: passenger-service
          uri: lb://passenger-service
          predicates:
            - Path=/api/passengers/**
          filters:
            - RewritePath=/api/passengers/(?<segment>.*), /api/passengers/$\{segment}
            - name: CircuitBreaker
              args:
                name: passengerServiceCB
                fallbackUri: forward:/fallback/passenger

        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/payments/**
          filters:
            - name: CircuitBreaker
              args:
                name: paymentServiceCB
                fallbackUri: forward:/fallback/payment

        - id: promocode-service
          uri: lb://payment-service
          predicates:
            - Path=/api/promocodes/**
          filters:
            - name: CircuitBreaker
              args:
                name: paymentServiceCB

        - id: rating-service
          uri: lb://rating-service
          predicates:
            - Path=/api/ratings/**
          filters:
            - name: CircuitBreaker
              args:
                name: ratingServiceCB
                fallbackUri: forward:/fallback/rating

        - id: rides-service
          uri: lb://rides-service
          predicates:
            - Path=/api/rides/**
          filters:
            - name: CircuitBreaker
              args:
                name: ridesServiceCB
                fallbackUri: forward:/fallback/rides

        - id: routes-service
          uri: lb://rides-service
          predicates:
            - Path=/api/routes/**
          filters:
            - name: CircuitBreaker
              args:
                name: ridesServiceCB

        # Маршруты для Swagger UI
        - id: swagger-ui
          uri: http://localhost:${server.port}
          predicates:
            - Path=/swagger-ui.html
          filters:
            - RewritePath=/swagger-ui.html, /webjars/swagger-ui/index.html

        - id: api-docs
          uri: http://localhost:${server.port}
          predicates:
            - Path=/v3/api-docs
          filters:
            - RewritePath=/v3/api-docs, /v3/api-docs/gateway

        # Маршруты документации для каждого сервиса
        - id: driver-service-docs
          uri: lb://driver-service
          predicates:
            - Path=/api/v3/api-docs/driver-service
          filters:
            - RewritePath=/api/v3/api-docs/driver-service, /v3/api-docs

        - id: passenger-service-docs
          uri: lb://passenger-service
          predicates:
            - Path=/api/v3/api-docs/passenger-service
          filters:
            - RewritePath=/api/v3/api-docs/passenger-service, /v3/api-docs

        - id: payment-service-docs
          uri: lb://payment-service
          predicates:
            - Path=/api/v3/api-docs/payment-service
          filters:
            - RewritePath=/api/v3/api-docs/payment-service, /v3/api-docs

        - id: rating-service-docs
          uri: lb://rating-service
          predicates:
            - Path=/api/v3/api-docs/rating-service
          filters:
            - RewritePath=/api/v3/api-docs/rating-service, /v3/api-docs

        - id: rides-service-docs
          uri: lb://rides-service
          predicates:
            - Path=/api/v3/api-docs/rides-service
          filters:
            - RewritePath=/api/v3/api-docs/rides-service, /v3/api-docs

  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Настройки Swagger
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    urls:
      - url: /v3/api-docs
        name: Gateway
      - url: /api/v3/api-docs/driver-service
        name: Driver Service
      - url: /api/v3/api-docs/passenger-service
        name: Passenger Service
      - url: /api/v3/api-docs/payment-service
        name: Payment Service
      - url: /api/v3/api-docs/rating-service
        name: Rating Service
      - url: /api/v3/api-docs/rides-service
        name: Rides Service

eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    hostname: gateway-server
    prefer-ip-address: false

# Настройки Resilience4j Circuit Breaker
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    instances:
      driverServiceCB:
        baseConfig: default
      passengerServiceCB:
        baseConfig: default
      paymentServiceCB:
        baseConfig: default
      ratingServiceCB:
        baseConfig: default
      ridesServiceCB:
        baseConfig: default
      routesServiceCB:
        baseConfig: default

# Настройки Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    gateway:
      enabled: true
    health:
      enabled: true
      show-details: always
    routes:
      enabled: true
    httptrace:
      enabled: true
    metrics:
      enabled: true
    circuitbreakers:
      enabled: true
  health:
    circuitbreakers:
      enabled: true
  metrics:
    distribution:
      percentiles:
        http.server.requests: 0.5,0.95,0.99

# Настройки логирования
logging:
  level:
    root: INFO
    org:
      springframework:
        cloud:
          gateway: DEBUG
      resilience4j: DEBUG
    springdoc: DEBUG