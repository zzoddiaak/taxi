# Server settings
server.port=8080

# Application settings
spring.application.name=gateway-server
spring.main.allow-bean-definition-overriding=true
spring.config.import=optional:configserver:
spring.cloud.config.enabled=false
spring.cloud.compatibility-verifier.enabled=false

# Gateway routes configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Main service routes
spring.cloud.gateway.routes[0].id=driver-service
spring.cloud.gateway.routes[0].uri=lb://driver-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/drivers/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=driverServiceCB
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/driver

spring.cloud.gateway.routes[1].id=passenger-service
spring.cloud.gateway.routes[1].uri=lb://passenger-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/passengers/**
spring.cloud.gateway.routes[1].filters[0].name=RewritePath
spring.cloud.gateway.routes[1].filters[0].args._genkey_0=/api/passengers/(?<segment>.*)
spring.cloud.gateway.routes[1].filters[0].args._genkey_1=/api/passengers/${segment}
spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=passengerServiceCB
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/fallback/passenger

spring.cloud.gateway.routes[2].id=payment-service
spring.cloud.gateway.routes[2].uri=lb://payment-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/payments/**
spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=paymentServiceCB
spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/fallback/payment

spring.cloud.gateway.routes[3].id=promocode-service
spring.cloud.gateway.routes[3].uri=lb://payment-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/promocodes/**
spring.cloud.gateway.routes[3].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.name=paymentServiceCB
spring.cloud.gateway.routes[3].filters[0].args.fallbackUri=forward:/fallback/payment


spring.cloud.gateway.routes[4].id=rating-service
spring.cloud.gateway.routes[4].uri=lb://rating-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/ratings/**
spring.cloud.gateway.routes[4].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[4].filters[0].args.name=ratingServiceCB
spring.cloud.gateway.routes[4].filters[0].args.fallbackUri=forward:/fallback/rating

spring.cloud.gateway.routes[5].id=rides-service
spring.cloud.gateway.routes[5].uri=lb://rides-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/rides/**
spring.cloud.gateway.routes[5].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[5].filters[0].args.name=ridesServiceCB
spring.cloud.gateway.routes[5].filters[0].args.fallbackUri=forward:/fallback/rides

spring.cloud.gateway.routes[6].id=routes-service
spring.cloud.gateway.routes[6].uri=lb://rides-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/routes/**
spring.cloud.gateway.routes[6].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[6].filters[0].args.name=ridesServiceCB
spring.cloud.gateway.routes[6].filters[0].args.fallbackUri=forward:/fallback/rides

spring.cloud.gateway.routes[15].id=auth-service
spring.cloud.gateway.routes[15].uri=lb://auth-service
spring.cloud.gateway.routes[15].predicates[0]=Path=/auth/**
spring.cloud.gateway.routes[15].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[15].filters[0].args.name=authServiceCB
spring.cloud.gateway.routes[15].filters[0].args.fallbackUri=forward:/fallback/auth

# Swagger UI routes
spring.cloud.gateway.routes[7].id=swagger-ui
spring.cloud.gateway.routes[7].uri=http://localhost:${server.port}
spring.cloud.gateway.routes[7].predicates[0]=Path=/swagger-ui.html
spring.cloud.gateway.routes[7].filters[0].name=RewritePath
spring.cloud.gateway.routes[7].filters[0].args._genkey_0=/swagger-ui.html
spring.cloud.gateway.routes[7].filters[0].args._genkey_1=/webjars/swagger-ui/index.html

spring.cloud.gateway.routes[8].id=api-docs
spring.cloud.gateway.routes[8].uri=http://localhost:${server.port}
spring.cloud.gateway.routes[8].predicates[0]=Path=/v3/api-docs
spring.cloud.gateway.routes[8].filters[0].name=RewritePath
spring.cloud.gateway.routes[8].filters[0].args._genkey_0=/v3/api-docs
spring.cloud.gateway.routes[8].filters[0].args._genkey_1=/v3/api-docs/gateway

# Documentation routes
spring.cloud.gateway.routes[9].id=driver-service-docs
spring.cloud.gateway.routes[9].uri=lb://driver-service
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/v3/api-docs/driver-service
spring.cloud.gateway.routes[9].filters[0].name=RewritePath
spring.cloud.gateway.routes[9].filters[0].args._genkey_0=/api/v3/api-docs/driver-service
spring.cloud.gateway.routes[9].filters[0].args._genkey_1=/v3/api-docs

spring.cloud.gateway.routes[10].id=passenger-service-docs
spring.cloud.gateway.routes[10].uri=lb://passenger-service
spring.cloud.gateway.routes[10].predicates[0]=Path=/api/v3/api-docs/passenger-service
spring.cloud.gateway.routes[10].filters[0].name=RewritePath
spring.cloud.gateway.routes[10].filters[0].args._genkey_0=/api/v3/api-docs/passenger-service
spring.cloud.gateway.routes[10].filters[0].args._genkey_1=/v3/api-docs

spring.cloud.gateway.routes[11].id=payment-service-docs
spring.cloud.gateway.routes[11].uri=lb://payment-service
spring.cloud.gateway.routes[11].predicates[0]=Path=/api/v3/api-docs/payment-service
spring.cloud.gateway.routes[11].filters[0].name=RewritePath
spring.cloud.gateway.routes[11].filters[0].args._genkey_0=/api/v3/api-docs/payment-service
spring.cloud.gateway.routes[11].filters[0].args._genkey_1=/v3/api-docs

spring.cloud.gateway.routes[12].id=rating-service-docs
spring.cloud.gateway.routes[12].uri=lb://rating-service
spring.cloud.gateway.routes[12].predicates[0]=Path=/api/v3/api-docs/rating-service
spring.cloud.gateway.routes[12].filters[0].name=RewritePath
spring.cloud.gateway.routes[12].filters[0].args._genkey_0=/api/v3/api-docs/rating-service
spring.cloud.gateway.routes[12].filters[0].args._genkey_1=/v3/api-docs

spring.cloud.gateway.routes[13].id=rides-service-docs
spring.cloud.gateway.routes[13].uri=lb://rides-service
spring.cloud.gateway.routes[13].predicates[0]=Path=/api/v3/api-docs/rides-service
spring.cloud.gateway.routes[13].filters[0].name=RewritePath
spring.cloud.gateway.routes[13].filters[0].args._genkey_0=/api/v3/api-docs/rides-service
spring.cloud.gateway.routes[13].filters[0].args._genkey_1=/v3/api-docs

spring.cloud.gateway.routes[14].id=auth-service-docs
spring.cloud.gateway.routes[14].uri=lb://auth-service
spring.cloud.gateway.routes[14].predicates[0]=Path=/api/v3/api-docs/auth-service
spring.cloud.gateway.routes[14].filters[0].name=RewritePath
spring.cloud.gateway.routes[14].filters[0].args._genkey_0=/api/v3/api-docs/auth-service
spring.cloud.gateway.routes[14].filters[0].args._genkey_1=/v3/api-docs


# Auto-configuration

# Swagger settings
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.urls[0].url=/v3/api-docs
springdoc.swagger-ui.urls[0].name=Gateway
springdoc.swagger-ui.urls[1].url=/api/v3/api-docs/driver-service
springdoc.swagger-ui.urls[1].name=Driver Service
springdoc.swagger-ui.urls[2].url=/api/v3/api-docs/passenger-service
springdoc.swagger-ui.urls[2].name=Passenger Service
springdoc.swagger-ui.urls[3].url=/api/v3/api-docs/payment-service
springdoc.swagger-ui.urls[3].name=Payment Service
springdoc.swagger-ui.urls[4].url=/api/v3/api-docs/rating-service
springdoc.swagger-ui.urls[4].name=Rating Service
springdoc.swagger-ui.urls[5].url=/api/v3/api-docs/rides-service
springdoc.swagger-ui.urls[5].name=Rides Service
springdoc.swagger-ui.urls[6].url=/api/v3/api-docs/auth-service
springdoc.swagger-ui.urls[6].name=Auth Service

# Eureka settings
eureka.client.enabled=true
eureka.client.healthcheck.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.instance.hostname=gateway-server
eureka.instance.prefer-ip-address=false

# Resilience4j settings
resilience4j.circuitbreaker.configs.default.slidingWindowSize=100
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=100
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=60s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=70
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.driverServiceCB.baseConfig=default
resilience4j.circuitbreaker.instances.passengerServiceCB.baseConfig=default
resilience4j.circuitbreaker.instances.paymentServiceCB.baseConfig=default
resilience4j.circuitbreaker.instances.ratingServiceCB.baseConfig=default
resilience4j.circuitbreaker.instances.ridesServiceCB.baseConfig=default
resilience4j.circuitbreaker.instances.routesServiceCB.baseConfig=default
resilience4j.timelimiter.instances.driverServiceCB.timeoutDuration=10s

# Actuator settings
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/actuator
management.endpoint.gateway.enabled=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.routes.enabled=true
management.endpoint.httptrace.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.circuitbreakers.enabled=true
management.health.circuitbreakers.enabled=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.logging.config=classpath:logback-spring.xml

# Zipkin settings
spring.zipkin.enabled=true
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.elastic.metrics.export.host=http://elasticsearch:9200
management.elastic.metrics.export.enabled=true
management.elastic.metrics.export.index=metrics-gateway
management.elastic.metrics.export.auto-create-index=false
management.elastic.metrics.export.timestamp-field-name=@timestamp
management.elastic.metrics.export.step=5m
management.metrics.tags.service=gateway_server
logging.level.io.micrometer=TRACE

# Metrics settings
management.management.endpoints.web.exposure.include=health,prometheus,metrics
management.metrics.tags.application=${spring.application.name}

# Logging settings
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.resilience4j=DEBUG
logging.level.springdoc=DEBUG